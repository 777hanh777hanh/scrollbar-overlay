# Define Templates

.version_rules:
  minor: 
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.0$/
  all_version: 
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)$/

.scripts:
  notify_telegram:
    - export AUTHOR=${CI_COMMIT_AUTHOR//<*>/}
    - export CREDIT="<code>$CI_PROJECT_NAME</code>%3A<code>$CI_COMMIT_TAG</code> %0A $CI_COMMIT_TITLE %0Aby $AUTHOR%0A%0A$CI_SERVER_URL/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
    - export MESSAGE="$STATUS $CREDIT" && export AUTHOR=${CI_COMMIT_AUTHOR//<*>/}
    - curl -X POST -d "parse_mode=HTML&chat_id=$TELEGRAM_GROUP_CI&text=$MESSAGE" https://api.telegram.org/bot$TELEGRAM_FASTBUY_TOKEN/sendMessage
  docker_build: 
    - docker login -u ci r.woay.io -p "$CI_R"
    - echo $CI_R
    - docker build . -t  r.woay.io/$CI_PROJECT_PATH:$IMAGE_TAG --push
    - docker push r.woay.io/$CI_PROJECT_PATH:$IMAGE_TAG
  npm_custom_registry:
    - export RESP=$(curl -s "$NPM_REGISTRY/tiny-tarball" | jq -r "._id"); if [[ $RESP == "tiny-tarball" ]]; then echo "registry=$NPM_REGISTRY" >> .npmrc ;fi

.deploy_job: 
  stage: deploy
  script: 
  - echo "$PRIVATE_KEY" > pkey.pem
  - eval $(ssh-agent -s)
  - chmod 400 pkey.pem && ssh-add pkey.pem
  - mkdir -p ~/.ssh && chmod 700 ~/.ssh
  - ssh-keyscan $TARGET_HOST >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - echo "Deploying app $CI_REGISTRY_IMAGE:$IMAGE_TAG"
  - export USER="${USERNAME:=ubuntu}"
  - ssh $USER@$TARGET_HOST "export DOCKER_API_IMAGE=r.woay.io/$CI_PROJECT_PATH:$CI_PIPELINE_ID;"
  - ssh $USER@$TARGET_HOST "$DEPLOY_COMMAND_1; $DEPLOY_COMMAND_2;"
  - echo "Website deployed success."
